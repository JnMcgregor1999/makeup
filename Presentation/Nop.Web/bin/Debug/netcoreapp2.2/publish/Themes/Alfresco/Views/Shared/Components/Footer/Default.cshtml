@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Services.Configuration

@inject IStoreContext storeContext
@inject IWorkContext workContext
@inject ISettingService settingService

@model FooterModel

@{
    var storeId = storeContext.CurrentStore.Id;
    var removeCopyright = settingService.GetSettingByKey("alfrescothemesettings.removecopyright", false, storeId, true);
    var removeDesignedBy = settingService.GetSettingByKey("alfrescothemesettings.removedesignedby", false, storeId, true);
}

<div class="footer">
    <div class="footer-upper">
        <div class="footer-block footer-block-first">
            <h3 class="title">@T("SevenSpikes.Themes.Alfresco.Common.CompanyInfo")</h3>
            <ul class="footer-menu">
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                }
            </ul>
        </div>
        <div class="footer-block">
            <h3 class="title">@T("SevenSpikes.Themes.Alfresco.Common.CustomerServices")</h3>
            <ul class="footer-menu">
                @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                }
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                }
                @if (Model.DisplayContactUsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                }
                @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                {
                    <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                }
            </ul>
        </div>
        <div class="footer-block">
            <h3 class="title">@T("Account.MyAccount")</h3>
            <ul class="footer-menu">
                @if (Model.DisplayCustomerInfoFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                }
                @if (Model.DisplayCustomerOrdersFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                }
                @if (Model.DisplayCustomerAddressesFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                }
                @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                {
                    <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                }
                @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                {
                    <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                }
            </ul>
        </div>
        <div class="footer-block">
            <h3 class="title">@T("SevenSpikes.Themes.Alfresco.Common.OurOffers")</h3>
            <ul class="footer-menu">
                @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                }
                @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                }
                @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                {
                    <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                }
                <li><a href="@Url.RouteUrl("ProductSearch")">@T("SevenSpikes.Themes.Alfresco.Common.Search")</a></li>
            </ul>
        </div>
    </div>
    <div class="footer-lower">
        <div class="accepted-payment-methods">
            <h3 class="title">@T("SevenSpikes.Themes.Alfresco.Common.PaymentOptions")</h3>
            <ul>
                <li class="method1"></li>
                <li class="method2"></li>
                <li class="method3"></li>
                <li class="method4"></li>
                <li class="method5"></li>
            </ul>
        </div>

        <div class="social-sharing">
            <h3 class="title">@T("SevenSpikes.Themes.Alfresco.Common.FollowUs")</h3>
            @await Component.InvokeAsync("SocialButtons")
        </div>

        <div class="subscribe-to-newsletter">
            @await Component.InvokeAsync("NewsletterBox")
        </div>
    </div>
</div>

<div class="bottom">
    <div class="center">
        @if (!removeCopyright)
        {
            <div class="footer-powered-by">
                Powered by <a href="https://www.nopcommerce.com/">nopCommerce</a>
            </div>
            @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer? Find more info here https://www.nopcommerce.com/copyrightremoval.aspx*@
        }
        @if (!removeDesignedBy)
        {
            <div class="footer-designed-by">
                Designed by <a href="https://www.nop-templates.com/" target="_blank">Nop-Templates.com</a>
            </div>
        }
        <div class="footer-disclaimer">
            @T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)
        </div>
        @if (Model.DisplayTaxShippingInfoFooter)
        {
            var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
            <div class="footer-tax-shipping">
                @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
            </div>
        }
        <div class="footer-store-theme">
            @await Component.InvokeAsync("StoreThemeSelector")
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
    </div>
</div>
